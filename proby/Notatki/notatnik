const MongoClient = require('mongodb').MongoClient

function Database () {
  if (!new.target) {
    return new Database()
  }

  let db = null
  let client = null

  this.connect = async (config) => {
    try {
        client = await MongoClient.connect(config.url, config.options)
        db = client.db(config.name)

        if (!db) {
          console.error(`can't establish mongo connection reason: null client`)
          throw(e)
        }

        console.info('successful establish DB connection')

    } catch (e) {
      throw e
    }
  }

  this.disconnect = () => {
    client.close()
  }

  process.on('SIGTERM', () => {
    client.close()
  })

  this.insert = async (name, content) => {
    const collection = db.collection(name)
    return db.collection(name).updateOne({ email: content.email }, { $set: { rss: content.rss } }, { upsert: true })
  }

  this.find = async (name, item) => {
    const collection = db.collection(name)
    return collection.findOne({}, { email: item })
  }

  this.update = async (name, oldContent, newContent) => {
    const collection = db.collection(name)
    return collection.updateOne(oldContent, newContent)
  }

  this.remove = async (name, content) => {
    const collection = db.collection(name)
    return collection.deleteOne(content)
  }

  this.drop = async (name) => {
    const collection = db.collection(name)
    return collection.drop()
  }
}

module.exports = Database



///////////////////////////////////////////////////////////




// WSTAWIANIE DANYCH DO TABELI


// MongoClient.connect(connectionURL,{useNewUrlParser:true}, (error, client) => {
//     if(error) {
//         return console.log('Nie można połączyć się z bazą danych')
//     }
//     const db = client.db(databaseName)
//     console.log('Połączono z bazą danych')
//     db.collection('E-mail').insertOne({
//         email:"tyczynski.kacper1@gmail.com",
//         userName:"Gigas",
//     },(err, res) => {
//         if(err) {
//             return console.log('Nie można połączyć się z bazą danych')
//         }
//         console.log(res.ops)
//     })
// })


// //Funkcja InsertMany
// MongoClient.connect(connectionURL,{useNewUrlParser:true}, (error, client) => {
//     if(error) {
//         return console.log('Nie można połączyć się z bazą danych')
//     }
//     const db = client.db(databaseName)
//     console.log('Połączono z bazą danych')

//     db.collection('E-mail').insertMany([    
//         {
//             email:"tyczynski.kacper1@gmail.com",
//             userName:"Gigas",
//         },
//         {
//             email:"echelonka96@gmail.com",
//             userName:"Matt",
//         }        
//     ],(err, res) => {
//         if(err) {
//             return console.log('Nie można połączyć się z bazą danych')
//         }
//         console.log(res.ops)
//     })
// })




// //operacja ZNAJDŹ w BD

// MongoClient.connect(connectionURL,{useNewUrlParser:true}, (error, client) => {
//     if(error) {
//         return console.log('Nie można połączyć się z bazą danych')
//     }
//     const db = client.db(databaseName)


//     // Szukanie po konkretnym _ID
//     db.collection('E-mail').findOne(
//         {    
//             "_id" : ObjectId("604e12d377c2b05264f3267b")
//         },(err, user) => {
//             if(err) {
//                 return console.log('Nie można przypasować do żadnego z dokumentów')
//             }
//             console.log(user)
//         }
//     )

//     //Szukanie po atrybutach
//     //NP: db.collection('E-mail').find({age: 24}).toArray((err,user) => {
//     //    db.collection('E-mail').find({zyje: True}).toArray((err,user) => {
//     db.collection('E-mail').find({userName: "Gigas"}).toArray((err,user) => {
//         if(err) return console.log(err)
//         console.log(user)
//     })
// })








//AKTUALIZACJA DANYCH
//Wstawienie nowej kolekcji z innymi wartościami
// MongoClient.connect(connectionURL,{useNewUrlParser:true}, (error, client) => {
//     if(error) {
//         return console.log('Nie można połączyć się z bazą danych')
//     }
//     const db = client.db(databaseName)
//     db.collection('users').insertMany([
//         {
//             userName:"Gigas",
//             age: 25,
//             description: "Poziom ukończenia projektu",
//             completed: false
//         }
//     ],(err, res) => {
//         if(err) {
//             return console.log('Nie można połączyć się z bazą danych')
//         }
//         console.log(res.ops)
//     })
// })


// //Aktualizacja Stringów
// MongoClient.connect(connectionURL, { useNewUrlParser: true }, (error, client) => {
//     if (error) {
//         return console.log("Nie można połączyć z bazą danych")
//     }
//     const db = client.db(databaseName)

//     const updatePromise = db.collection('users').updateOne({
//         _id: ObjectId('604e1cd890551c4968177c2a')
//     },{
//         $set: {
//             userName: 'Twórca projektu'
//         }
//     })

//     updatePromise.then((res) => {
//         console.log(res)
//     }).catch((err) => {
//         console.log(err)
//     })

// })



//Zmiana wieku za pomocą inkrementacji - $inc

// MongoClient.connect(connectionURL, { useNewUrlParser: true }, (error, client) => {
//     if (error) {
//         return console.log('Nie można połaczyć z bazą danych')
//     }
//     const db = client.db(databaseName)

//     const updatePromise = db.collection('users').updateOne({
//         _id: ObjectId('604e1cd890551c4968177c2a')
//     },{
//         $inc: {
//             age: 115
//         }
//     })

//     updatePromise.then((res) => {
//         console.log(res)
//     }).catch((err) => {
//         console.log(err)
//     })

// })         NIESTETY NIE DZIAŁA JAK NALEŻY. ZNALEŹĆ ZNAJDUJE ALE PODMIENIAĆ WIEKU NIE ZMIENIA




// ZAMIANA FALSE NA TRUE 
// MongoClient.connect(connectionURL, { useNewUrlParser: true }, (error, client) => {
//     if (error) {
//         return console.log('Nie można połączyć z bazą danych')
//     }
//     const db = client.db(databaseName)

//     db.collection('users').updateMany({
//         completed:false
//     },{
//         $set: {
//             completed:true
//         }
//     }).then((res) => {
//         console.log(res)
//     }).catch((err) => {
//         console.log(err)
//     })

// })






// //USUWANIE DANYCH Z BAZY DANYCH
// MongoClient.connect(connectionURL, { useNewUrlParser: true }, (error, client) => {
//     if (error) {
//         return console.log('Nie można połączyć z bazą danych')
//     }
//     const db = client.db(databaseName)

//     db.collection('E-mail').deleteMany({userName: "Gigas"})
//     .then((res) => {
//         console.log(res)
//     }).catch((err) => {
//         console.log(err)
//     })

//     db.collection('users').deleteOne({age: 25})
//     .then((res) => {
//         console.log(res)
//     }).catch((err) => {
//         console.log(err)
//     })

// })
//


///////////////////////////////////////////


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Form</title>
</head>

<body>
    E-mail:<br>
    <input type="email" id="mail" name="mail" placeholder="mail@mail.pl" <input type="submit"><br>
    <input type="submit">
    <br><br><br><br>

    <form action="test.php" method="post">
        RSS URL: <input type="rss" id="rss" name="rss" placeholder="www.www.pl" <input type="submit"><br>
        <input type="submit">
        <br><br><br><br>

        <form action="/action_page.php">
            <textarea name="message" rows="10" cols="30" placeholder="test tekst"></textarea>
            <br><br>
            <input type="submit">
        </form>
    </form>

</body>

</html>





 /*  function feedparser(urls){

    this.feedparser = (async () => {

        let urls = new Array()
      for(url in urls){
           for(i = 0, len = urls.length; i<len; i++){
                url.toString()

            }
            let feed = await parser.parseURL(url)
            console.log(feed.title);
            feed.items.forEach(item => {
                console.log(item.title + ':' +item.link);
            })          
        }})();
}*/