const Parser = require('rss-parser')
let parser = new Parser()
class FeedParser {
    
    constructor () {

    }

    async parse(urls) {
        let err = console.log('error')
        let feeds = new Array()
        try{
            for (const url in urls) {
                let promise = await parser.parseURL(url)
                return promise

            }
        /*  const promise1 = () => {return new Promise((resolve, reject) => {
                
                    resolve(parser), reject(err)
                }})} */

            const promise2 = () => {return  new Promise((resolve, reject) => {
                resolve(feeds.push(urls)), reject(err)
                })}             

            return Promise.all([promise2]).then((feeds) => {
                feeds.items.forEach(feeds => {
                    console.log(feeds.title + ':' + feeds.link)
                });
            }).catch(err => {
                console.log(err)
            })}catch(err){
                console.log(err)
            }      
    }
}

const wynik = new FeedParser
let  a = new Array('https://www.reddit.com/.rss','https://www.nasa.gov/content/nasa-rss-feeds')
console.log(wynik.parse(a))



module.exports= FeedParser






all([promise1]).then((feeds) => {
                feeds.items.forEach(feeds => {
                    console.log(feeds.title + ':' + feeds.link)
                });
            })
            .catch(err => {
                console.log(err)

            })}
            catch(err){
                console.log(err)
            }      
    }




    ///////////////////////////////////////////

    const Parser = require('rss-parser')
let parser = new Parser()
class FeedParser {
    
    constructor () {

    }

    async parse(urls) {
        return new Promise(resolve => {
            resolve(promise)
            try{
                for (const url in urls) {

                    return promise
                }
            }catch (err){
                console.log(err)
            }
        }
        )}
      /*  let err = console.log('error')
        let feeds = new Array()*/
        

    async parsowanie(){    

            const promise1 = new Promise.all([promise1]).then((feeds) => {
                feeds.items.forEach(feeds => {
                    console.log(feeds.title + ':' + feeds.link)
                });
            })
            .catch(err => {
                console.log(err)

            })}
            catch(err){
                console.log(err)
            }      
    }
}

const wynik = new FeedParser
let  a = new Array('https://www.reddit.com/.rss','https://www.nasa.gov/content/nasa-rss-feeds')
console.log(wynik.parse(a))



module.exports= FeedParser




///////////////////////////////////


const Parser = require('rss-parser')
let parser = new Parser()

class FeedParser {
    
    constructor () {
       let rssParser = new RssParser()
    }

    async parse(urls) {
        let err = console.log('error')

        try{
            for (const url in urls) {
                let promise = await parser.parseURL(url)
                return promise
            }
        }catch(err){
            console.log(err + ' blad w asyncu')
        }
    
    function resolve(urls) {
        var p1 =  new Promise(resolve => {
            let feeds = new Array() 
            resolve(feeds.push(urls)), reject(err)
        })}}

            
    
    async zwrotka(){
       const promise = Promise.all([p1]).then((feeds) => {
            feeds.items.forEach(feeds => {
                console.log(feeds.title + ':' + feeds.link)
            });
        }).catch(err) 
   }      

   resolve()
   .then(urls => )

}


let  a = new Array('https://www.reddit.com/.rss','https://www.nasa.gov/content/nasa-rss-feeds')




module.exports= FeedParser


